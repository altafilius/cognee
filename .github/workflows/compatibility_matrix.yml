name: CI

on:
  push:
    branches:
      - '**'   # run on pushes to any branch
  pull_request:
    branches:
      - '**'   # run on PRs targeting any branch
  workflow_dispatch:

permissions:
  contents: read

jobs:
  lint_and_compatibility:
    name: Lint and Compatibility Matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ['3.10', '3.11', '3.12']
        dep: ['lowest', 'latest']
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install uv
        run: pip install uv

      - name: Install dependencies (lowest or latest)
        run: |
          set -euo pipefail
          if [ "${{ matrix.dep }}" = "lowest" ]; then
            if [ -f constraints-lowest.txt ]; then
              echo '::notice::Using constraints-lowest.txt for lowest-deps lane.'
              uv pip install --system -c constraints-lowest.txt -e .
            else
              echo '::notice::constraints-lowest.txt not found; installing without constraints for lowest-deps lane.'
              # If your uv version supports it, you can try lowest resolution first:
              # uv pip install --system --resolution=lowest -e . || uv pip install --system -e .
              uv pip install --system -e .
            fi
          else
            # latest lane + OpenAI 2.x probe in one go (no double install)
            if uv pip install --system -e . 'openai>=2,<3'; then
              :
            else
              echo '::notice::OpenAI 2.x not available; installing without constraint.'
              uv pip install --system -e .
            fi
          fi

      - name: Run linting
        uses: astral-sh/ruff-action@v2
        with:
          args: check .

      - name: Show pip cache (for debugging)
        run: echo "${PIP_CACHE_DIR:-$HOME/.cache/pip}"

      - name: Run import smoke test
        run: |
          set -euo pipefail
          python - <<'PY'
          try:
              import cognee
              print({"import_ok": True})
          except Exception as e:
              print({"import_ok": False, "error": str(e)})
              raise
          PY

      - name: Run tests (if present)
        run: |
          set -euo pipefail
          if [ -d tests ] || ls -1 *.py 2>/dev/null | grep -qE '(^|/)test_'; then
            uv pip install --system pytest pytest-asyncio pytest-cov
            pytest -q
          else
            echo '::notice::No pytest configuration or tests directory. Skipping.'
          fi
